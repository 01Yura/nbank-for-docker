name: Run tests

on: [push, workflow_dispatch]

jobs:
  run-tests:
    name: Set up services (review apps) and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set HOST_PATH for docker-compose
        run: |
          PROJECT_PATH=$(pwd)
          echo "Detected project path: $PROJECT_PATH"
          echo "HOST_PATH=$PROJECT_PATH" > infra/.env
          cat infra/.env

      - name: Set up services
        run: |
          cd infra
          chmod +x ./start-docker-compose.sh
          ./start-docker-compose.sh
          cd ..

      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend API..."
          timeout 60 bash -c 'until curl -f http://localhost:4111/actuator/health; do sleep 2; done'
          echo "Waiting for frontend..."
          timeout 60 bash -c 'until curl -f http://localhost:80; do sleep 2; done'
          echo "Waiting for Selenoid..."
          timeout 60 bash -c 'until curl -f http://localhost:4444/status; do sleep 2; done'

      - name: Run tests
        run: ./mvnw clean test -q
        env:
          APIBASEURL: http://localhost:4111
          UIBASEURL: http://localhost:80
          UIREMOTE: http://localhost:4444/wd/hub

      - name: Run Swagger coverage
        if: always()
        run: .swagger-coverage-commandline-1.5.0/bin/swagger-coverage-commandline -s http://localhost:4111/v3/api-docs -i ./target/swagger-coverage-output

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: target/allure-results
          allure_history: allure-history

      - name: Build swagger coverage report
        if: always()
        run: |
          mkdir -p allure-history/${{ github.run_number }}
          cp swagger-coverage-report.html allure-history/${{ github.run_number }}/ || echo "Swagger coverage report not found"

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Notify on success
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="✅ Tests PASSED in GitHub Actions: ${{ github.repository }} on ${{ github.ref_name }}"

      - name: Notify on failure
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="❌ Tests FAILED in GitHub Actions: ${{ github.repository }} on ${{ github.ref_name }}"

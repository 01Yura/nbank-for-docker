# –≠—Ç–æ —Ä–∞–±–æ—á–∏–π –ø–∞–π–ø–ª–∞–π–Ω —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —Ä–µ–ø–æ—Ä—Ç–∞ –≤ github-pages.
# –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ swagger-coverage –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ https://01yura.github.io/nbank-for-docker/–ù–û–ú–ï–†_–†–ï–ü–û–†–¢–ê/swagger-coverage-report.html
# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

# –ù–∞–∑–≤–∞–Ω–∏–µ workflow, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ GitHub Actions
name: Run tests

# –¢—Ä–∏–≥–≥–µ—Ä—ã –∑–∞–ø—É—Å–∫–∞:
# - push: –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø—É—à–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
# - workflow_dispatch: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–∑ UI GitHub
on: [push, workflow_dispatch]

jobs:
  run-tests:
    # –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –∏–º—è job: –≥–æ—Ç–æ–≤–∏–º —Å–µ—Ä–≤–∏—Å—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    name: Set up services (review apps) and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–∞–Ω–Ω–µ—Ä–∞
        uses: actions/checkout@v4

      - name: Set up JDK
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º JDK 21 (Temurin) –¥–ª—è —Å–±–æ—Ä–∫–∏/–∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ Maven
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven repository
        # –ö–µ—à–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π Maven-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (~/.m2/repository)
        # –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Å–±–æ—Ä–æ–∫ (–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ –±—É–¥—É—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ)
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set HOST_PATH for docker-compose
        # –°–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è infra/.env —Å –ø—É—Ç—ë–º –ø—Ä–æ–µ–∫—Ç–∞,
        # —á—Ç–æ–±—ã docker-compose –º–æ–≥ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ö–æ—Å—Ç–∞
        run: |
          # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (—Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–∞–Ω–Ω–µ—Ä–∞)
          PROJECT_PATH=$(pwd)
          echo "Detected project path: $PROJECT_PATH"
          # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é HOST_PATH –≤ infra/.env
          echo "HOST_PATH=$PROJECT_PATH" > infra/.env
          # –ü–µ—á–∞—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          cat infra/.env

      - name: Set up services
        # –ó–∞–ø—É—Å–∫–∞–µ–º docker-compose –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–ë–î, backend, selenoid –∏ —Ç.–¥.)
        # –°–∫—Ä–∏–ø—Ç start-docker-compose.sh –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ infra –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ–¥–Ω—è—Ç–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        run: cd infra && ./start-docker-compose.sh && cd ..

      - name: Detect runner IP
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º IP-–∞–¥—Ä–µ—Å —Ä–∞–Ω–Ω–µ—Ä–∞, —á—Ç–æ–±—ã –ø—Ä–æ–∫–∏–Ω—É—Ç—å –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é UIBASEURL
        id: runner_ip
        run: |
          # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π IP –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (hostname -I)
          ip=$(hostname -I | awk '{print $1}')
          echo "Runner IP is: $ip"
           # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º ip –∫–∞–∫ output —à–∞–≥–∞ (–¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ steps.runner_ip.outputs.ip)
          echo "ip=$ip" >> $GITHUB_OUTPUT

      - name: Run tests
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã Maven –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ (-q). –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
        # - APIBASEURL: –±–∞–∑–æ–≤—ã–π URL API —Å–µ—Ä–≤–∏—Å–∞
        # - UIBASEURL: –±–∞–∑–æ–≤—ã–π URL UI (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç IP —Ä–∞–Ω–Ω–µ—Ä–∞, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å nginx/selenoid UI –∏–∑–≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤)
        # - UIREMOTE: —É–¥–∞–ª—ë–Ω–Ω—ã–π WebDriver (Selenoid)
        run: ./mvnw clean test -q
        env:
          APIBASEURL: http://localhost:4111
          UIBASEURL: http://${{ steps.runner_ip.outputs.ip }}:80
          UIREMOTE: http://localhost:4444/wd/hub

      - name: Run Swagger coverage
        # –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å Swagger coverage, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã —É–ø–∞–ª–∏ (if: always())
        # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é OpenAPI –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑–≤–∞–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        if: always()
        run: .swagger-coverage-commandline-1.5.0/bin/swagger-coverage-commandline -s http://localhost:4111/v3/api-docs -i ./target/swagger-coverage-output

      - name: Extract Docker images
        # –ò–∑–≤–ª–µ–∫–∞–µ–º Docker –æ–±—Ä–∞–∑—ã –∏–∑ docker-compose.yml –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
        if: always()
        run: |
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º yq –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ YAML
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq

          # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—Ä–∞–∑—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
          echo "üê≥ Docker Images:" > docker_images.txt
          yq eval '.services[].image' infra/docker-compose.yml | while read -r image; do
            if [ -n "$image" ] && [ "$image" != "null" ]; then
              # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –æ–±—Ä–∞–∑–∞ (—É–±–∏—Ä–∞–µ–º —Ç–µ–≥)
              image_name=$(echo "$image" | cut -d':' -f1)
              # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Docker Hub
              echo "‚Ä¢ <a href='https://hub.docker.com/r/$image_name'>$image</a>" >> docker_images.txt
            fi
          done

          # –í—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          cat docker_images.txt

      - name: Load test report history
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ç—á—ë—Ç–æ–≤ Allure –∏–∑ –≤–µ—Ç–∫–∏ gh-pages, —á—Ç–æ–±—ã –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã
        uses: actions/checkout@v2
        if: always()
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Allure-–æ—Ç—á—ë—Ç, —Å–∫–ª–∞–¥—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏ –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: target/allure-results
          allure_history: allure-history

      - name: Build swagger coverage report
        # –ö–æ–ø–∏—Ä—É–µ–º html-–æ—Ç—á—ë—Ç –ø–æ Swagger coverage –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞ —Ç–µ–∫—É—â–∏–π –∑–∞–ø—É—Å–∫
        if: always()
        run: sudo cp swagger-coverage-report.html allure-history/${{ github.run_number }}

      - name: Prepare video directory
        # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤–∏–¥–µ–æ –≤ allure-history
        if: always()
        run: |
          sudo mkdir -p allure-history/${{ github.run_number }}/videos
          sudo chown -R $USER:$USER allure-history/${{ github.run_number }}/videos
          echo "Created video directory: allure-history/${{ github.run_number }}/videos"

      - name: Copy test videos
        # –ö–æ–ø–∏—Ä—É–µ–º –≤–∏–¥–µ–æ UI —Ç–µ—Å—Ç–æ–≤ –∏–∑ selenoid_reports/video –≤ allure-history
        if: always()
        run: |
          if [ -d "selenoid_reports/video" ] && [ "$(ls -A selenoid_reports/video)" ]; then
            echo "Found test videos, copying to allure-history..."
            sudo cp -r selenoid_reports/video/* allure-history/${{ github.run_number }}/videos/ 2>/dev/null || true
            sudo chown -R $USER:$USER allure-history/${{ github.run_number }}/videos/
            echo "Videos copied successfully"
            ls -la allure-history/${{ github.run_number }}/videos/
          else
            echo "No test videos found in selenoid_reports/video"
          fi

      - name: Generate video gallery
        # –°–æ–∑–¥–∞—ë–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ
        if: always()
        run: |
          if [ -d "allure-history/${{ github.run_number }}/videos" ] && [ "$(ls -A allure-history/${{ github.run_number }}/videos)" ]; then
            echo "Generating video gallery HTML..."
            cat > allure-history/${{ github.run_number }}/videos/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Videos - Run #${{ github.run_number }}</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      margin: 0;
                      padding: 20px;
                      background-color: #f5f5f5;
                  }
                  .container {
                      max-width: 1200px;
                      margin: 0 auto;
                      background: white;
                      border-radius: 8px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      padding: 20px;
                  }
                  h1 {
                      color: #333;
                      text-align: center;
                      margin-bottom: 30px;
                  }
                  .video-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
                      gap: 20px;
                  }
                  .video-item {
                      border: 1px solid #ddd;
                      border-radius: 8px;
                      overflow: hidden;
                      background: white;
                  }
                  video {
                      width: 100%;
                      height: 200px;
                      object-fit: cover;
                  }
                  .video-info {
                      padding: 15px;
                  }
                  .video-name {
                      font-weight: 600;
                      color: #333;
                      margin-bottom: 5px;
                      word-break: break-all;
                  }
                  .video-size {
                      color: #666;
                      font-size: 14px;
                  }
                  .no-videos {
                      text-align: center;
                      color: #666;
                      font-style: italic;
                      padding: 40px;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üé• Test Videos - Run #${{ github.run_number }}</h1>
                  <div class="video-grid" id="videoGrid">
                      <!-- Videos will be populated by JavaScript -->
                  </div>
              </div>
              
              <script>
                  // Get list of video files
                  const videoFiles = [VARIABLE_PLACEHOLDER];
                  
                  const videoGrid = document.getElementById('videoGrid');
                  
                  if (videoFiles.length === 0) {
                      videoGrid.innerHTML = '<div class="no-videos">No test videos available for this run.</div>';
                  } else {
                      videoFiles.forEach(file => {
                          const videoItem = document.createElement('div');
                          videoItem.className = 'video-item';
                          
                          videoItem.innerHTML = `
                              <video controls preload="metadata">
                                  <source src="${file}" type="video/mp4">
                                  Your browser does not support the video tag.
                              </video>
                              <div class="video-info">
                                  <div class="video-name">${file}</div>
                                  <div class="video-size">Click to play</div>
                              </div>
                          `;
                          
                          videoGrid.appendChild(videoItem);
                      });
                  }
              </script>
          </body>
          </html>
          EOF

          # Get list of video files and replace placeholder
          video_files=$(ls allure-history/${{ github.run_number }}/videos/*.mp4 2>/dev/null | sed 's|allure-history/${{ github.run_number }}/videos/||g' | sed 's/^/"/;s/$/"/' | tr '\n' ',' | sed 's/,$//')
          if [ -n "$video_files" ]; then
              sed -i "s/VARIABLE_PLACEHOLDER/$video_files/g" allure-history/${{ github.run_number }}/videos/index.html
          else
              sed -i "s/VARIABLE_PLACEHOLDER/[]/g" allure-history/${{ github.run_number }}/videos/index.html
          fi

          echo "Video gallery generated successfully"
          else
            echo "No video directory found, skipping gallery generation"
          fi

      - name: Collect test statistics
        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–æ–≤ –∏–∑ Allure –∏ Swagger coverage –æ—Ç—á–µ—Ç–æ–≤
        if: always()
        id: test_stats
        run: |
          chmod +x scripts/collect-test-statistics.sh
          ./scripts/collect-test-statistics.sh

      - name: Publish test report
        # –ü—É–±–ª–∏–∫—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é allure-history –≤ –≤–µ—Ç–∫—É gh-pages –∫–∞–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Notify on success
        # –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram —á–µ—Ä–µ–∑ –±–æ—Ç–∞
        if: success()
        run: |
          # –¢–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –∏–º—è –≤–µ—Ç–∫–∏/—Ä–µ—Ñ–∞ –∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç—á–µ—Ç—ã
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode="HTML" \
            -d text="‚úÖ Tests PASSED in GitHub Actions: <a href='${{ github.server_url }}/${{ github.repository }}'>${{ github.repository }}</a> on <a href='${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}'>${{ github.ref_name }}</a>

          üì¶ Repository: <a href='${{ github.server_url }}/${{ github.repository }}'>${{ github.repository }}</a>
          üåø Branch: <a href='${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}'>${{ github.ref_name }}</a>
          üîó Commit: <a href='${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}'>${{ github.sha }}</a>
          üë§ Author: <a href='${{ github.server_url }}/${{ github.actor }}'>${{ github.actor }}</a>
          üìã GitHub Actions: <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'>View Run</a>

          $(cat test-statistics.txt)

          üìä Allure Report: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/'>View Report</a>
          üìà Swagger Coverage: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/swagger-coverage-report.html'>View Coverage</a>
          üé• Test Videos: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/videos/'>View Videos</a>

          $(cat docker_images.txt)"

      - name: Notify on failure
        # –í —Å–ª—É—á–∞–µ –ø–∞–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram —Å –ø–æ–º–µ—Ç–∫–æ–π –æ—à–∏–±–∫–∏
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode="HTML" \
            -d text="‚ùå Tests FAILED in GitHub Actions: <a href='${{ github.server_url }}/${{ github.repository }}'>${{ github.repository }}</a> on <a href='${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}'>${{ github.ref_name }}</a>

          üì¶ Repository: <a href='${{ github.server_url }}/${{ github.repository }}'>${{ github.repository }}</a>
          üåø Branch: <a href='${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}'>${{ github.ref_name }}</a>
          üîó Commit: <a href='${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}'>${{ github.sha }}</a>
          üë§ Author: <a href='${{ github.server_url }}/${{ github.actor }}'>${{ github.actor }}</a>
          üìã GitHub Actions: <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'>View Run</a>

          $(cat test-statistics.txt)

          üìä Allure Report: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/'>View Report</a>
          üìà Swagger Coverage: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/swagger-coverage-report.html'>View Coverage</a>
          üé• Test Videos: <a href='https://01yura.github.io/nbank-for-docker/${{ github.run_number }}/videos/'>View Videos</a>

          $(cat docker_images.txt)"
